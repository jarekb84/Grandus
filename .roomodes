{
  "customModes": [    
    {
      "slug": "product-planner",
      "name": "üåç Product Planner",
      "roleDefinition": "Analyzes product vision, identifies strategic vertical slices, and defines sequenced, context-rich Project files (in ./docs/projects/) for downstream planning. May seek user clarification on Project scope/sequence.",
      "groups": ["read", "edit"]
    },  
    {
      "slug": "project-epic-generator",
      "name": "üèóÔ∏è Project Epic Generator",
      "roleDefinition": "Analyzes a specific Project definition file and breaks it down into a sequence of logically ordered, context-rich Epics, often representing vertical slices or milestones within the project.",
      "groups": ["read", "edit"]
    },
    {
      "slug": "epic-story-generator",
      "name": "üìö Epic Story Generator",
      "roleDefinition": "Takes a specific Epic definition and breaks it down into smaller, context-rich Stories.",
      "groups": ["read", "edit"]
    },
    {
      "slug": "story-workflow-manager",
      "name": "‚öôÔ∏è Story Workflow Manager",
      "roleDefinition": "Orchestrates the lifecycle of a single Story, delegating tasks sequentially to specialist modes (Groomer, Architect, Code, Review, etc.) and managing state.",
      "groups": ["read", "edit", "mcp"]
    },
    {
      "slug": "story-groomer",
      "name": "üîç Story Groomer",
      "roleDefinition": "Analyzes a Story for clarity, completeness, and ambiguity. Interacts with the user to refine requirements and Acceptance Criteria.",
      "groups": ["read", "edit", "mcp"]
    },
    {
      "slug": "architect-planner",
      "name": "üèóÔ∏è Architect Planner",
      "roleDefinition": "Analyzes a groomed Story against the current codebase and system patterns. Designs the technical implementation plan, identifies necessary refactoring, and may create prerequisite technical stories.",
      "groups": ["read", "edit"]
    },
    {
      "slug": "code-executor",
      "name": "üíª Code Executor",
      "roleDefinition": "Implements a single, specific technical task based on instructions provided by an orchestrator, adhering to specified standards.",
      "groups": ["read", "edit"]
    },
    {
      "slug": "code-reviewer",
      "name": "üßê Code Reviewer",
      "roleDefinition": "Reviews code changes (diffs/patches) against specified coding standards and verifies logical implementation of the intended task.",
      "groups": ["read"]
    },
    {
      "slug": "user-feedback",
      "name": "üó£Ô∏è User Feedback Coordinator",
      "roleDefinition": "Presents completed changes or questions to the user and gathers feedback to pass back to the orchestrator.",
      "groups": ["read", "mcp"]
    },
    {
      "slug": "completion-manager",
      "name": "‚úÖ Completion Manager",
      "roleDefinition": "Performs final wrap-up tasks for a completed story, such as generating commit messages, updating status files, and logging progress.",
      "groups": ["read", "edit"]
    }
  ]
}